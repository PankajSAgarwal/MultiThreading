package com.pankaj.multithreading.concurrentmap;

import java.util.concurrent.ConcurrentMap;

class FirstWorker implements Runnable{
	
	private ConcurrentMap<String, Integer> map;
	
	public FirstWorker(ConcurrentMap<String, Integer> map) {
		this.map = map;
	}

	@Override
	public void run() {
		try {
			map.put("B", 1);
			map.put("C", 2);
			map.put("F", 3);

			Thread.sleep(1000);

			map.put("A", 4);
			Thread.sleep(1000);
			map.put("E", 5);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	
}

	
	class SecondWorker implements Runnable{
		
		private ConcurrentMap<String, Integer> map;
		
		public SecondWorker(ConcurrentMap<String, Integer> map) {
			this.map = map;
		}

		@Override
		public void run() {
			try {
				Thread.sleep(5000);
				map.get("A");
				Thread.sleep(1000);
				map.get("C");
				map.get("E");

				Thread.sleep(1000);

				map.put("A", 4);
				Thread.sleep(1000);
				map.put("E", 5);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
		
	}
public class App {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
