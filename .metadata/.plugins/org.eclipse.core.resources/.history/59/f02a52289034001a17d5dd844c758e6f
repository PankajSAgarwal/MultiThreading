package com.pankaj.multithreading.semaphores;

import java.util.concurrent.Semaphore;

/*
 *  - semaphores maintains a set of permits
 *  - acquire() - if a permit is available then take it
 *  - release() - adds a permit
 *  
 *  	Sempaphore just keeps a count of the number available
 *  	new Semaphore(int permits, boolean fair)
 */

enum Downloader{
	
	INSTANCE;
	private Semaphore semaphore = new Semaphore(3, true);
	
}

public class App {

	public static void main(String[] args) {
		
		

	}

}
